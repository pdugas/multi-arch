name: Build
on:
  push:
  pull_request:
    branches:
      - 'main'
      - 'release/*'

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    env:
        REGISTRY: ghcr.io
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Tag Info
        run: git fetch --prune --unshallow

      - name: Log into Container Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          #username: ${{secrets.DOCKER_LOGIN}}
          #password: ${{secrets.DOCKER_TOKEN}}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Test
        run: make

      - name: Build Container Image
        run: |
          DEFAULT=main
          if egrep -i "^refs/tags/v[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}-rc[0-9]{1,}$" <<<$GITHUB_REF >/dev/null; then
            VERSION=${GITHUB_REF##*/v}
          elif egrep -i "^refs/tags/v[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}$" <<<$GITHUB_REF >/dev/null; then
            TAG=${GITHUB_REF##*/v}
            LATEST=1
          elif egrep -i "^refs/heads/${DEFAULT}$" <<<$GITHUB_REF >/dev/null; then
            VERSION=next
          else
            VERSION=unreleased
          fi
          VERSION=${VERSION,,} # to lowercase
          TAG=${{env.REGISTRY}}/${{github.repository}}
          docker buildx build \
            --tag ${TAG}:${VERSION} \
            --platform linux/amd64,linux/arm64 \
            --file .docker/Dockerfile.publish \
            .
          if [ "${VERSION}" != "unreleased" ]; then 
            docker push ${TAG}:${VERSION}
          fi
          if [ -n "${LATEST}" ]; then
            docker tag ${TAG}:${VERSION} ${TAG}:latest
            docker push ${TAG}:latest
          fi

